@model Reports.Models.Report
@{
	ViewData["title"] = Model.ID;
	ViewData["appName"] = Model.AppName;
	ViewData["appURL"] = Model.AppURL;
}

@if (Model.Fields.Length > 1)
{
	<div class="reportFunctions">
		@if (Model.Fields[0].Any(f => f.Type == Reports.Models.Type.Link))
		{
			<span id="openAllReports">Open all</span>
		}
		@{ 
			var sortableFields = ViewData["sortableFields"] as Dictionary<string, string>;
			if (sortableFields?.Count > 0)
			{
				<span>
					Sort by
					<select id="sortBy">
						@foreach (var field in sortableFields)
						{
							<option value="@field.Key">@field.Value</option>
						}
					</select>
				</span>
			}
		}
	</div>
}

@foreach (var r in Model.Fields)
{
	<div class="report">
		@foreach (var f in r)
		{
			switch (f.Type)
			{
				case Reports.Models.Type.Link:
					{
						<div class="@f.ID reportLink">
							<a title="@f.Name" target="_blank" href="@f.Value">
								@f.Name
							</a>
						</div>
						break;
					}
				case Reports.Models.Type.Date:
					{
						<div class="@f.ID">
							<span>
								<span class="fieldName">@f.Name</span>:
								<span class="timestamp fieldData" data-unixtime="@f.Value">@f.Value</span>
							</span>
						</div>
						break;
					}
				case Reports.Models.Type.Answers:
					{
						if (f.Value.ToUpperInvariant().StartsWith("A"))
						{
							<div class="@f.ID" style="color:#00AB0B" title="This question has an accepted answer">
								<span>
									<span class="fieldName">@f.Name</span>: 
									<span class="fieldData">@f.Value.Remove(0, 1)</span>
								</span>
							</div>
						}
						else
						{
							<div class="@f.ID" title="This question does not have an accepted answer">
								<span>
									<span class="fieldName">@f.Name</span>: 
									<span class="fieldData">@f.Value</span>
								</span>
							</div>
}
                        break;
                    }
			    case Reports.Models.Type.Fields:
			    {
			        <div class="@f.ID">
			            <span>
			                <span class="fieldName">@f.Name</span>: 
			                @foreach (var sf in f.Fields)
			                {
			                    switch (sf.Type)
			                    {
			                        case Reports.Models.SubType.Link:
			                        {
			                            <div class="@sf.ID reportLink">
			                                <a title="@sf.Name" target="_blank" href="@sf.Value">
			                                    @sf.Name
			                                </a>
			                            </div>
			                            break;
			                        }
			                        case Reports.Models.SubType.Date:
			                        {
			                            <div class="@sf.ID">
			                                <span>
			                                    <span class="fieldName">@sf.Name</span>:
			                                    <span class="timestamp fieldData" data-unixtime="@sf.Value">@sf.Value</span>
			                                </span>
			                            </div>
			                            break;
			                        }
			                        case Reports.Models.SubType.Answers:
			                        {
			                            if (f.Value.ToUpperInvariant().StartsWith("A"))
			                            {
			                                <div class="@sf.ID" style="color: #00AB0B" title="This question has an accepted answer">
			                                    <span>
			                                        <span class="fieldName">@sf.Name</span>:
			                                        <span class="fieldData">@sf.Value.Remove(0, 1)</span>
			                                    </span>
			                                </div>
			                            }
			                            else
			                            {
			                                <div class="@sf.ID" title="This question does not have an accepted answer">
			                                    <span>
			                                        <span class="fieldName">@sf.Name</span>:
			                                        <span class="fieldData">@sf.Value</span>
			                                    </span>
			                                </div>
			                            }
			                            break;
			                        }
			                        default:
			                        {
			                            <div class="@sf.ID">
			                                <span>
			                                    <span class="fieldName">@sf.Name</span>: 
			                                    <span class="fieldData">@sf.Value</span>
			                                </span>
			                            </div>
			                            break;
			                        }
			                    }
			                }
			            </span>
			        </div>
			        break;
			    }
                default:
                    {
						<div class="@f.ID">
							<span>
								<span class="fieldName">@f.Name</span>: 
								<span class="fieldData">@f.Value</span>
							</span>
						</div>
						break;
					}
			}
		}
	</div>
}